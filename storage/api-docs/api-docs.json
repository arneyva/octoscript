{
    "openapi": "3.0.0",
    "info": {
        "title": "Octroscript",
        "version": "1.0.0"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login and generate token",
                "operationId": "aef5bcab826aa3e23745f16e5acd8b58",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token generated successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout and revoke token",
                "operationId": "ad65cbbd4e9f201619eae184a5961a98",
                "responses": {
                    "200": {
                        "description": "Logged out successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/brand": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get all brands",
                "operationId": "76211de82e95840a4a1518fb698094b7",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/brand/store": {
            "post": {
                "tags": [
                    "Brands"
                ],
                "summary": "Create a new brand",
                "operationId": "03ab10b2f2f2b1cf6efee0a0d7d479c0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "BrandName"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Brand created successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/platform/store": {
            "post": {
                "tags": [
                    "Platforms"
                ],
                "summary": "Create a new platform",
                "operationId": "8f779d7188c4f958f7742b9e25508b51",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New Platform"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Platform created successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/platform/{id}": {
            "put": {
                "tags": [
                    "Platforms"
                ],
                "summary": "Update an existing platform",
                "operationId": "4700f3e8dd463f6e227d24d96e3b4bd9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Platform Name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Platform updated successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Platform not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Platforms"
                ],
                "summary": "Delete a platform",
                "operationId": "3d32689b94ca04afdfa12cba49685e54",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Platform deleted successfully"
                    },
                    "404": {
                        "description": "Platform not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get all postingan",
                "operationId": "c33f8cd4cd4e95a5f32c20cf333078a2",
                "parameters": [
                    {
                        "name": "brand_id",
                        "in": "query",
                        "description": "Filter by brand ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "platform_id",
                        "in": "query",
                        "description": "Filter by platform ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "approved",
                                "rejected"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts/store": {
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Create a new post",
                "operationId": "a50a90999dd3611bcba4fee54b1712e2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "post_title",
                                    "brand_id",
                                    "platform_id",
                                    "due_date",
                                    "payment",
                                    "status"
                                ],
                                "properties": {
                                    "post_title": {
                                        "type": "string",
                                        "example": "New Post"
                                    },
                                    "brand_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "platform_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-31"
                                    },
                                    "payment": {
                                        "type": "number",
                                        "example": 50000
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "approved",
                                            "rejected"
                                        ],
                                        "example": "pending"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts/{id}": {
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "Update an existing post",
                "operationId": "feea686fa4b710adbefa6d89d36e7138",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "post_title": {
                                        "type": "string",
                                        "example": "Updated Post"
                                    },
                                    "brand_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "platform_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-31"
                                    },
                                    "payment": {
                                        "type": "number",
                                        "example": 60000
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "approved",
                                            "rejected"
                                        ],
                                        "example": "approved"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Delete a post",
                "operationId": "4764afe0bf551f5215022ade9c0cf25c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "Token",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Endpoints for user authentication"
        },
        {
            "name": "Brands",
            "description": "Endpoints for Brands"
        },
        {
            "name": "Platforms",
            "description": "Endpoints for Platforms"
        },
        {
            "name": "Posts",
            "description": "Endpoints for Posts"
        }
    ]
}